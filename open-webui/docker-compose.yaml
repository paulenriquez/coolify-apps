services:
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    depends_on:
      - postgres
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
    expose:
      - "8080"
    environment:
      - SERVICE_FQDN_OPENWEBUI

      - WEBUI_URL=${WEBUI_URL}
      - WEBUI_SECRET_KEY=${SERVICE_PASSWORD_WEBUISECRETKEY}

      # Auth (via OIDC)
      - ENABLE_SIGNUP=False
      - ENABLE_LOGIN_FORM=False
      - ENABLE_OAUTH_SIGNUP=True
      - OAUTH_CLIENT_ID=${WEBUI_OAUTH_CLIENT_ID}
      - OAUTH_CLIENT_SECRET=${WEBUI_OAUTH_CLIENT_SECRET}
      - OAUTH_SCOPES=${WEBUI_OAUTH_SCOPES-openid profile email}
      - OPENID_PROVIDER_URL=${WEBUI_OPENID_PROVIDER_URL}

      # Database
      - DATABASE_URL=postgres://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB:-webui}

      # S3 Storage
      - STORAGE_PROVIDER=s3
      - S3_ENDPOINT_URL=${WEBUI_S3_ENDPOINT_URL}
      - S3_BUCKET_NAME=${WEBUI_S3_BUCKET_NAME}
      - S3_ACCESS_KEY_ID=${WEBUI_S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${WEBUI_S3_SECRET_ACCESS_KEY}

    restart: unless-stopped
    healthcheck:
      test:
        - CMD
        - curl
        - "-f"
        - "http://127.0.0.1:8080"
      interval: 5s
      timeout: 30s
      retries: 10
    labels:
      - docker-volume-backup.stop-during-backup=true

  postgres:
    image: postgres:17-alpine
    user: postgres
    environment:
      POSTGRES_USER: ${SERVICE_USER_POSTGRES}
      POSTGRES_PASSWORD: ${SERVICE_PASSWORD_POSTGRES}
      POSTGRES_DB: ${POSTGRES_DB:-webui}
    volumes:
      - open-webui-postgres:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "$SERVICE_USER_POSTGRES",
          "-d",
          "$POSTGRES_DB",
        ]
      interval: 5s
      timeout: 30s
      retries: 10

  backup:
    # Lock to v2.43.4 (latest version as of 15-Jun-2025)
    image: offen/docker-volume-backup:v2.43.4
    container_name: docker-volume-backup
    volumes:
      - open-webui:/backup/open-webui:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - AWS_ENDPOINT=${DVB_S3_ENDPOINT}
      - AWS_S3_BUCKET_NAME=${DVB_S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${DVB_S3_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${DVB_S3_SECRET_ACCESS_KEY}

      # Backup Settings
      - BACKUP_CRON_EXPRESSION=${DVB_CRON_EXP_UTC-@daily}
      - BACKUP_RETENTION_DAYS=${DVB_RETENTION_DAYS-7}
      - BACKUP_FILENAME=open-webui-dvb-%Y-%m-%dT%H-%M-%S-UTC.tar.gz
      - BACKUP_PRUNING_PREFIX=open-webui-dvb-

    depends_on:
      - open-webui
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -q '[/]usr/bin/backup -foreground'"]
      interval: 5s
      timeout: 30s
      retries: 10

volumes:
  open-webui: {}
